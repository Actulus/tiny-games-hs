#!/usr/bin/env bash
# A front end to run games easily.

# All games in category then submission order, as in README.
# (leave 0th element empty)
games=(
""
prelude/guess1/guess1.hs
prelude/pure-doors/pure-doors.hs
prelude/fifteen/fifteen.hs
prelude/chess/chess.hs
base/timing/timing.hs
base/shoot/shoot.hs
base/log2048/log2048.hs
base/rhythm/rhythm.hs
hackage/guess2/guess2.hs
hackage/wordle/wordle.hs
hackage/ski/ski.hs
hackage/guesscolor/guesscolor.hs
hackage/bulls-n-cows/bulls-n-cows.hs
hackage/hallway-to-hell/hallway-to-hell.hs
hackage/1234-hero/1234-hero.hs
hackage/crappy-flappy/crappy-flappy.hs
hackage/pong/pong.hs
hackage/minesweeper/minesweeper.hs
)

# Games needing special invocation.
fifteen()           { runghc -XPatternSynonyms -XLambdaCase "$1"; }
log2048()           { runghc "$1"; }
bulls-n-cows()      { stack runghc --resolver lts-20.10 --package random "$1"; }
hallway-to-hell()   { stack runghc --resolver lts-20.10 --package random --package rio "$1"; }
crappy-flappy()     { stack script --resolver=lts-20.10 --package ansi-terminal-game --ghc-options -threaded "$1"; } # Is -threaded needed on some platform ?
pong()              { stack script --resolver=lts-20.10 --package ansi-terminal-game --ghc-options -threaded "$1"; }

# Help
gamecat()  { echo "$1" | cut -d/ -f1; }
gamename() { basename "$1" .hs; }
help() {
    cat <<HERE
--------------------------------------------------------
                 ___         __                          
|__| _  _|  _||   | . _     / _  _  _  _    | _  _    /| 
|  |(_|_)|((-||   | || )\/  \__)(_||||(-  __)(_||||    | 

--------------------------------------------------------
Here are the entries from HTGJ1, Feb 2023 !
This script can run each game for you, using ghc or stack
(if you don't have these yet, see https://www.haskell.org/get-started).
Usage: play [NUM|NAME]

HERE
    for k in "${!games[@]}"; do
	[[ $k == 0 ]] && continue
	g="${games[$k]}"
	printf "%2d) %-20s  %s\n" "$k" "$(gamename "$g")" "[$(gamecat "$g")]"
    done
    echo
}

declare -A gamesbyname
for g in "${games[@]}"; do
    [[ -z $g ]] && continue
    gamesbyname["$(gamename "$g")"]=$g
done

# Main
cd "$(dirname "${BASH_SOURCE[0]}")" || exit 1
if [[ $# == 0 || "$1" == "-h" ||  "$1" == "--help" || "$2" == "-h" ||  "$2" == "--help" ]];
then help
else
    g=${games[$1]}
    if [[ -z $g ]]; then g=${gamesbyname[$1]}; fi
    if [[ -z $g ]]; then echo "$1 is unrecognised, run '$0' to see the list"; exit 1; fi
    gname=$(gamename "$g")
    if declare -f "$gname" >/dev/null
    then "$gname" "$g"
    else $g
    fi
fi
